//
//  Opinion.m
//  FrankApp
//
//  Generated by Ian Terrell on 04/16/2009.
//  Copyright 2009 Ian Terrell. All rights reserved.
//

#import "Opinion.h"
#import "Frank.h"
#import "User.h"


@implementation Opinion

@synthesize value, userPk;
@synthesize _user;


#pragma mark Create and Update

+(NSString *)tableName {
  return @"opinions";
}

-(BOOL)save {
  NSString *sql = nil;
  if ([self isNewRecord])
    sql = @"INSERT INTO opinions (value, user_pk) VALUES (?, ?);";
  else
    sql = [NSString stringWithFormat:@"UPDATE opinions SET value = ?, user_pk = ? WHERE pk = %d;", [pk intValue]];

  FMDatabase *db = [Frank sharedDatabase];
  BOOL success = [db executeUpdate:sql, value, userPk];
  if (success)
    self.pk = [FrankObject lastInsertRowId];
  return success;
}

#pragma mark Relationships

-(User *)user {
  if (userPk == nil)
    return nil;
  else if (_user == nil)
    _user = [User findByPk:userPk];
  return _user;
}

-(User *)userWithReload {
  if (userPk == nil)
    return nil;
  _user = [User findByPk:userPk];
  return _user;
}

-(void)setUser:(User *)obj {
  userPk = [obj pk];
  [_user release];
  [obj retain];
  _user = obj;
}

#pragma mark Helper Methods


+(id)buildFromResultSetRow:(FMResultSet *)rs {
  Opinion *opinion = [Opinion alloc];
  opinion.pk = [NSNumber numberWithInt:[rs intForColumn:@"pk"]];
  opinion.value = [rs stringForColumn:@"value"];
  opinion.userPk = [NSNumber numberWithInt:[rs intForColumn:@"user_pk"]];
  return [opinion autorelease];
}

#pragma mark Boilerplate

- (void)dealloc {
  [value release];
  [userPk release];
  [_user release];
	[super dealloc];
}

@end